map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream {{ app_name }}_backend {
    server unix:{{ app_current_path }}/tmp/puma.sock;
}

{% if use_ssl is defined and use_ssl == true %}
server {
    listen {{ ansible_ssh_host }}:80;
    server_name {{ app_hostname }};
    return 301 https://{{ app_hostname }}$request_uri;
}

server {
    listen {{ ansible_ssh_host }}:443 ssl http2;

    server_name {{ app_hostname }};

    ssl_certificate     /etc/letsencrypt/live/{{ app_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ app_hostname }}/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
{% else %}
server {
    listen 80;
    listen [::]:80;
    server_name {{ app_hostname }};
{% endif %}

    root       {{ app_current_path }}/public;
    error_log  /var/log/nginx/{{ app_name }}_error.log;
    access_log /var/log/nginx/{{ app_name }}_access.log;

    error_page 404             /404.html;
    error_page 500 502 503 504 /500.html;

    add_header X-Frame-Options "SAMEORIGIN";

    location /assets {
        access_log off;
        expires max;
        gzip_static on;
    }

    location / {
        try_files $uri @app;
    }

    location @app {
        proxy_pass http://{{ app_name }}_backend;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
